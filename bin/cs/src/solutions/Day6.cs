// Generated by Haxe 4.1.2

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace solutions {
	public class Day6 : global::haxe.lang.HxObject {
		
		static Day6() {
			global::solutions.Day6.input = global::sys.io.File.getContent("E:/Mila/Documents/GitHub/adventofcode2020/src/inputs/Day6.txt");
		}
		
		
		public Day6(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Day6() {
			global::solutions.Day6.__hx_ctor_solutions_Day6(this);
		}
		
		
		protected static void __hx_ctor_solutions_Day6(global::solutions.Day6 __hx_this) {
		}
		
		
		public static string input;
		
		public static void solve() {
			unchecked {
				global::System.Console.WriteLine(((object) ("Solving Day6") ));
				global::Array<string> arr = global::haxe.lang.StringExt.split(global::solutions.Day6.input, "\r\n\r\n");
				global::Array<int> counts = new global::Array<int>(new int[]{});
				int resultA = 0;
				int resultB = 0;
				{
					int _g = 0;
					while (( _g < arr.length )) {
						string @group = arr[_g];
						 ++ _g;
						global::Array<string> personArr = global::haxe.lang.StringExt.split(@group, "\r\n");
						string groupString = "";
						global::haxe.ds.StringMap<int> groupMap = new global::haxe.ds.StringMap<int>();
						{
							int _g1 = 0;
							while (( _g1 < personArr.length )) {
								string person = personArr[_g1];
								 ++ _g1;
								{
									int _g2 = 0;
									while (( _g2 < person.Length )) {
										char answer = person[_g2];
										 ++ _g2;
										if (( global::haxe.lang.StringExt.indexOf(groupString, global::haxe.lang.Runtime.concat("", global::Std.@string(answer)), default(global::haxe.lang.Null<int>)) == -1 )) {
											groupString = global::haxe.lang.Runtime.concat(groupString, global::Std.@string(answer));
										}
										
										if (groupMap.exists(global::haxe.lang.Runtime.concat("", global::Std.@string(answer)))) {
											string tmp = global::haxe.lang.Runtime.concat("", global::Std.@string(answer));
											{
												int v = (new global::haxe.lang.Null<int>(( (groupMap.@get(tmp)).@value + 1 ), true)).@value;
												groupMap.@set(tmp, v);
											}
											
										}
										else {
											groupMap.@set(global::haxe.lang.Runtime.concat("", global::Std.@string(answer)), 1);
										}
										
									}
									
								}
								
							}
							
						}
						
						counts.push(groupString.Length);
						if (( resultA == 0 )) {
							resultA = groupString.Length;
						}
						else {
							resultA += groupString.Length;
						}
						
						{
							object key = ((object) (new global::haxe.ds._StringMap.StringMapKeyIterator<int>(((global::haxe.ds.StringMap<int>) (groupMap) ))) );
							while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(key, "hasNext", 407283053, null))) {
								string key1 = global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.callField(key, "next", 1224901875, null));
								if (global::haxe.lang.Runtime.eq((groupMap.@get(key1)).toDynamic(), personArr.length)) {
									 ++ resultB;
								}
								
							}
							
						}
						
					}
					
				}
				
				global::System.Console.WriteLine(((object) (global::haxe.lang.Runtime.concat("a: ", global::haxe.lang.Runtime.toString(resultA))) ));
				global::System.Console.WriteLine(((object) (global::haxe.lang.Runtime.concat("b: ", global::haxe.lang.Runtime.toString(resultB))) ));
			}
		}
		
		
		public static int charToIndex(string c) {
			unchecked {
				return ( (global::haxe.lang.StringExt.charCodeAt(c, 0)).@value - 97 );
			}
		}
		
		
	}
}


